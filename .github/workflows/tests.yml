name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-eng poppler-utils
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install fastapi uvicorn python-multipart
        fi
        # Install compatible test dependencies
        pip install pytest==7.4.3 httpx==0.24.1
    
    - name: Test dependency installation
      run: |
        python -c "
        try:
            import pdf2image, pytesseract; 
            from PIL import Image; 
            print('✓ All OCR dependencies installed')
        except ImportError as e: 
            print(f'⚠ Some dependencies missing: {e}')
        "
    
    - name: Run tests
      run: |
        if [ -f test_main.py ]; then
          pytest test_main.py -v
        elif [ -f test_simple.py ]; then
          pytest test_simple.py -v
        else
          echo "No test files found"
          exit 1
        fi
    
    - name: Test API endpoints
      run: |
        python -c "
        from fastapi.testclient import TestClient
        from main import app
        client = TestClient(app)
        
        # Test health check
        response = client.get('/')
        assert response.status_code == 200
        print('✓ Health check works')
        
        # Test dependencies check
        response = client.get('/dependencies') 
        deps = response.json()['dependencies']
        print(f'✓ Dependencies: {deps}')
        "

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort
    
    - name: Check files exist
      run: |
        ls -la *.py || echo "No Python files found"
    
    - name: Run linting (if files exist)
      run: |
        if [ -f main.py ]; then
          echo "Linting main.py..."
          black --check main.py || echo "Black formatting issues found"
          flake8 main.py --max-line-length=88 --extend-ignore=E203,E501,W503 || echo "Flake8 issues found"
          isort --check-only main.py || echo "Import sorting issues found"
        fi
        
        if [ -f test_main.py ]; then
          echo "Linting test_main.py..."
          black --check test_main.py || echo "Black formatting issues found"
          flake8 test_main.py --max-line-length=88 --extend-ignore=E203,E501,W503 || echo "Flake8 issues found"
        fi